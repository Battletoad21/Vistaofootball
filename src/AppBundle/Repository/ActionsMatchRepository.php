<?php

namespace AppBundle\Repository;

/**
* ActionsMatchRepository
*
* This class was generated by the Doctrine ORM. Add your own custom
* repository methods below.
*/

use Doctrine\ORM\Entityrepository;


class ActionsMatchRepository extends EntityRepository
{

  /**                    METHODES POUR LA POSSESSION             **/
  public function Possession($id)
  {
    $query = $this->createQueryBuilder('c')
    ->where('c.joueurAction <= 16 AND c.joueurReceveur = 123')
    ->andWhere('c.actionId = 1 OR c.actionId = 112')
    ->andWhere('c.matchId = :id')
    ->setParameter(':id', $id)
    ->getQuery();
    $possessionClub = $query->getResult();
    $possessionClub = count($possessionClub);

    $query = $this->createQueryBuilder('d');
    $query->where('d.actionId = 1 OR d.actionId = 112 AND d.matchId = :id')
    ->setParameter(':id', $id);
    $possessionClubToto = $query->getQuery()->getResult();
    $possessionClubToto = count($possessionClubToto);
    $possessionClub /= $possessionClubToto;
    $possessionClub = round($possessionClub,2);
    return $possessionClub;
  }

  public function TirsToto($idMatch)
  {
    $tirs = [];
    $query = $this->createQueryBuilder('c')
    ->select('c')
    ->where('c.joueurAction <= 16 AND c.actionId = 110 OR c.actionId = 111 AND c.matchId = :id')
    ->setParameter(':id', $idMatch)
    ->getQuery();
    $tirsClub = $query->getResult();
    $tirsClub = count($tirsClub);

    $query = $this->createQueryBuilder('d');
    $query->where('d.actionId = 110 OR d.actionId = 111 AND d.matchId = :id')
    ->setParameter(':id', $idMatch);
    $tirsClubToto = $query->getQuery()->getResult();
    $tirsClubToto = count($tirsClubToto);
    $tirs = ['tirsClubToto' => $tirsClubToto, 'tirsClub' => $tirsClub];

    return $tirs;
  }
  public function CPA($idMatch)
  {
    $cpa = [];
    $query = $this->createQueryBuilder('c')
    ->select('c')
    ->where('c.joueurAction <= 16 AND c.actionId = 106 OR c.actionId = 101 AND c.matchId = :id')
    ->setParameter(':id', $idMatch)
    ->getQuery();
    $nbCpa = $query->getResult();
    $nbCpa = count($nbCpa);

    $query = $this->createQueryBuilder('d');
    $query->where('d.actionId = 106 OR d.actionId = 101');
    $cpaToto = $query->getQuery()->getResult();
    $cpaToto = count($cpaToto);
    $cpa = ['nous' => $nbCpa, 'Toto' => $cpaToto];

    return $cpa;
  }

  /**Perte passes equipe 1**/
  public function PassesAmisPerdues()
  {





    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction > 0 AND c.actionId = 1 AND c.joueurReceveur = 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /** passes reussies equipe 1**/
  public function PassesAmisReussies()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction > 0 AND c.actionId = 1 AND c.joueurReceveur > 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /**Perte passes equipe 2**/
  public function PassesEnnemiesPerdues()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction = 0 AND c.actionId = 1 AND c.joueurReceveur > 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  public function PassesEnnemiesReussies()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction = 0 AND c.actionId = 1 AND c.joueurReceveur = 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /**CENTRES**/

  /**Perte centre equipe 1**/
  public function CentresAmisPerdues()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction > 0 AND c.actionId = 109 AND c.joueurReceveur = 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /** centres reussies equipe 1**/
  public function CentresAmisReussies()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction > 0 AND c.actionId = 109 AND c.joueurReceveur > 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /**centres passes equipe 2**/
  public function CentresEnnemiesPerdues()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction = 0 AND c.actionId = 109 AND c.joueurReceveur > 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  public function CentresEnnemiesReussies()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction = 0 AND c.actionId = 109 AND c.joueurReceveur = 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /**PASSES LONGUES**/

  /**PL equipe 1**/
  public function PLAmisPerdues()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction > 0 AND c.actionId = 112 AND c.joueurReceveur = 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /** PL reussies equipe 1**/
  public function PLAmisReussies()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction > 0 AND c.actionId = 112 AND c.joueurReceveur > 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /**PL passes equipe 2**/
  public function PLEnnemiesPerdues()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction = 0 AND c.actionId = 112 AND c.joueurReceveur > 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }

  /**PL ennemies perdues**/
  public function PLEnnemiesReussies()
  {
    $dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction = 0 AND c.actionId = 112 AND c.joueurReceveur = 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();
  }



  /**                    METHODES POUR LA DISCPLINE            **/






  public function cinqMetreAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 107 AND c.joueurReceveur > 0')
        ;
    return $query
    ->getQuery()
    ->getResult()
    ;
    /**$dql = 'SELECT c FROM AppBundle:ActionsMatch c WHERE c.joueurAction > 0 AND c.actionId = 107 AND c.joueurReceveur = 0';
    $query = $this->getEntityManager()->createQuery($dql);
    return $query->execute();**/
  }

  public function cinqMetreAdversaire(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 107 AND c.joueurReceveur = 0')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function TouchesAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 105 AND c.joueurReceveur > 0')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function TouchesAdversaires(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 105 AND c.joueurReceveur = 0')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function HjAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 108')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function HjEnnemis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 106')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function CornerAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 106 AND c.joueurReceveur > 0')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function CornerAdversaire(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 101 AND c.joueurReceveur = 0')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function FauteAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 101')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function FauteAdversaire(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction = 0 AND c.actionId = 101')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function FauteJauneAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 102')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function FauteJauneAdversaire(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction = 0 AND c.actionId = 102')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function FauteRougeAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 102')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function FauteRougeAdversaire(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction = 0 AND c.actionId = 102')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }


  /**                 TIRS             **/

  public function TirCadreAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 110')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function TirNonCadreAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 111')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function DriblesReussiesAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.matchId = :id AND c.joueurAction > 0 AND c.actionId = 113')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function DriblesEchoueesAmis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction > 0 AND c.actionId = 114')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }




  public function TirCadreEnnemis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction = 0 AND c.actionId = 110')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function TirNonCadreEnnemis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction = 0 AND c.actionId = 111')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function DriblesReussiesEnnemis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction = 0 AND c.actionId = 113')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }

  public function DriblesEchoueesEnnemis(){

    $query = $this->createQueryBuilder('c');
    $query->where('c.joueurAction = 0 AND c.actionId = 114')
    ;
    return $query
    ->getQuery()
    ->getResult()
    ;
  }
  public function Recuperation($id){



    $query = $this->createQueryBuilder('c');
    $query->where('c.matchId=:id');
    $query->setParameter(':id',$id);
    ;
    $recup = $query->getQuery()->getResult();

    $idrecup = [];
  foreach ($recup as $key => $value) {
    if ($value->getJoueurAction() == '0123' && $value->getJoueurReceveur() <=16) {
    $idrecup[] = $key+1;
  }
  }
$i = 0;
  foreach($idrecup as $keyrecup => $idrecup){
    foreach($recup as $key=>$value){
      if ($key == $idrecup) {
        if ($value->getJoueurReceveur() != "123") {
          $i++;
        }
      }
    }
  }
    $idrecupv = [];
  foreach ($recup as $key => $value) {
    if ($value->getJoueurAction() <=16 && $value->getJoueurReceveur() == "0123") {
    $idrecupv[] = $key+1;
    }
  }
$z = 0;
  foreach($idrecupv as $keyrecupv => $idrecupv){
    foreach($recup as $key=>$value){
      if ($key == $idrecupv) {
        if ($value->getJoueurReceveur() <=! 16) {
          $z++;
        }
      }
    }
  }

  return $recuperationMatch = ['nous' => $i, 'vous' => $z];


  }












}
